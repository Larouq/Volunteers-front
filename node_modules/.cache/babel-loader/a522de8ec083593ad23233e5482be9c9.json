{"ast":null,"code":"var measureDistance = require('turf-distance');\n\nvar point = require('turf-helpers').point;\n\nvar bearing = require('turf-bearing');\n\nvar destination = require('turf-destination');\n/**\n * Takes a {@link LineString|line} and returns a {@link Point|point} at a specified distance along the line.\n *\n * @name along\n * @param {Feature<LineString>} line input line\n * @param {number} distance distance along the line\n * @param {String} [units=miles] can be degrees, radians, miles, or kilometers\n * @return {Feature<Point>} Point `distance` `units` along the line\n * @example\n * var line = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [\n *       [-77.031669, 38.878605],\n *       [-77.029609, 38.881946],\n *       [-77.020339, 38.884084],\n *       [-77.025661, 38.885821],\n *       [-77.021884, 38.889563],\n *       [-77.019824, 38.892368]\n *     ]\n *   }\n * };\n *\n * var along = turf.along(line, 1, 'miles');\n *\n * var result = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [line, along]\n * };\n *\n * //=result\n */\n\n\nmodule.exports = function (line, distance, units) {\n  var coords;\n  if (line.type === 'Feature') coords = line.geometry.coordinates;else if (line.type === 'LineString') coords = line.coordinates;else throw new Error('input must be a LineString Feature or Geometry');\n  var travelled = 0;\n\n  for (var i = 0; i < coords.length; i++) {\n    if (distance >= travelled && i === coords.length - 1) break;else if (travelled >= distance) {\n      var overshot = distance - travelled;\n      if (!overshot) return point(coords[i]);else {\n        var direction = bearing(coords[i], coords[i - 1]) - 180;\n        var interpolated = destination(coords[i], overshot, direction, units);\n        return interpolated;\n      }\n    } else {\n      travelled += measureDistance(coords[i], coords[i + 1], units);\n    }\n  }\n\n  return point(coords[coords.length - 1]);\n};","map":null,"metadata":{},"sourceType":"script"}