{"ast":null,"code":"var meta = require('turf-meta');\n/**\n * Combines a {@link FeatureCollection} of {@link Point},\n * {@link LineString}, or {@link Polygon} features\n * into {@link MultiPoint}, {@link MultiLineString}, or\n * {@link MultiPolygon} features.\n *\n * @name combine\n * @param {FeatureCollection<(Point|LineString|Polygon)>} fc a FeatureCollection of any type\n * @return {FeatureCollection<(MultiPoint|MultiLineString|MultiPolygon)>} a FeatureCollection of corresponding type to input\n * @example\n * var fc = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [19.026432, 47.49134]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [19.074497, 47.509548]\n *       }\n *     }\n *   ]\n * };\n *\n * var combined = turf.combine(fc);\n *\n * //=combined\n */\n\n\nmodule.exports = function (fc) {\n  var groups = {\n    MultiPoint: {\n      coordinates: [],\n      properties: []\n    },\n    MultiLineString: {\n      coordinates: [],\n      properties: []\n    },\n    MultiPolygon: {\n      coordinates: [],\n      properties: []\n    }\n  };\n  var multiMapping = Object.keys(groups).reduce(function (memo, item) {\n    memo[item.replace('Multi', '')] = item;\n    return memo;\n  }, {});\n\n  function addToGroup(feature, key, multi) {\n    if (!multi) {\n      groups[key].coordinates.push(feature.geometry.coordinates);\n    } else {\n      groups[key].coordinates = groups[key].coordinates.concat(feature.geometry.coordinates);\n    }\n\n    groups[key].properties.push(feature.properties);\n  }\n\n  meta.featureEach(fc, function (feature) {\n    if (!feature.geometry) return;\n\n    if (groups[feature.geometry.type]) {\n      addToGroup(feature, feature.geometry.type, true);\n    } else if (multiMapping[feature.geometry.type]) {\n      addToGroup(feature, multiMapping[feature.geometry.type], false);\n    }\n  });\n  return {\n    type: 'FeatureCollection',\n    features: Object.keys(groups).filter(function (key) {\n      return groups[key].coordinates.length;\n    }).sort().map(function (key) {\n      return {\n        type: 'Feature',\n        properties: {\n          collectedProperties: groups[key].properties\n        },\n        geometry: {\n          type: key,\n          coordinates: groups[key].coordinates\n        }\n      };\n    })\n  };\n};","map":null,"metadata":{},"sourceType":"script"}