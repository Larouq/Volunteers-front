{"ast":null,"code":"import _regeneratorRuntime from \"/Users/adotmob/Desktop/volunteers-front/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/adotmob/Desktop/volunteers-front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nvar BACKEND_API_URL = \"http://localhost:3000\";\nvar YANDEX_API = \"2e846d9f-4492-4c1d-b01a-fcb4810766c7\";\nexport function submitRegistration(_x) {\n  return _submitRegistration.apply(this, arguments);\n}\n\nfunction _submitRegistration() {\n  _submitRegistration = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(form) {\n    var email, password, firstName, lastName, params, results;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            email = form.email, password = form.password, firstName = form.firstName, lastName = form.lastName;\n            _context.prev = 1;\n            params = {\n              email: email,\n              password: password,\n              name: lastName,\n              nickname: firstName\n            };\n            _context.next = 5;\n            return axios.post(\"\".concat(BACKEND_API_URL, \"/auth\"), params);\n\n          case 5:\n            results = _context.sent;\n            localStorage.setItem(\"authentication_token\", results.headers[\"access-token\"]);\n            localStorage.setItem(\"email\", email);\n            localStorage.setItem(\"user_id\", results.data.data[\"id\"]);\n            localStorage.setItem(\"client\", results.headers[\"client\"]);\n            return _context.abrupt(\"return\", results);\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](1);\n            alert(new Error(\"registration failed please change password or email.\"));\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 13]]);\n  }));\n  return _submitRegistration.apply(this, arguments);\n}\n\nexport function submitAuthentification(_x2) {\n  return _submitAuthentification.apply(this, arguments);\n}\n\nfunction _submitAuthentification() {\n  _submitAuthentification = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(form) {\n    var email, password, params, results;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            email = form.email, password = form.password;\n            _context2.prev = 1;\n            params = {\n              email: email,\n              password: password\n            };\n            _context2.next = 5;\n            return axios.post(\"\".concat(BACKEND_API_URL, \"/auth/sign_in\"), params);\n\n          case 5:\n            results = _context2.sent;\n            localStorage.setItem(\"authentication_token\", results.headers[\"access-token\"]);\n            localStorage.setItem(\"email\", email);\n            localStorage.setItem(\"user_id\", results.data.data[\"id\"]);\n            localStorage.setItem(\"client\", results.headers[\"client\"]);\n            return _context2.abrupt(\"return\", results);\n\n          case 13:\n            _context2.prev = 13;\n            _context2.t0 = _context2[\"catch\"](1);\n            return _context2.abrupt(\"return\", _context2.t0.response);\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 13]]);\n  }));\n  return _submitAuthentification.apply(this, arguments);\n}\n\nexport function fetchRequests(_x3, _x4, _x5, _x6) {\n  return _fetchRequests.apply(this, arguments);\n}\n\nfunction _fetchRequests() {\n  _fetchRequests = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(access_token, client, uid, userId) {\n    var params, results;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            params = {\n              user_id: userId\n            };\n            console.log('params', params);\n            _context3.next = 5;\n            return axios.get(\"\".concat(BACKEND_API_URL, \"/requests\"), {\n              params: {\n                params: params\n              }\n            }, {\n              headers: {\n                \"access-token\": access_token,\n                client: client,\n                uid: uid\n              }\n            });\n\n          case 5:\n            results = _context3.sent;\n            console.log(results.data);\n            return _context3.abrupt(\"return\", results.data);\n\n          case 10:\n            _context3.prev = 10;\n            _context3.t0 = _context3[\"catch\"](0);\n            alert(new Error(\"backend API request failed\"));\n\n          case 13:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 10]]);\n  }));\n  return _fetchRequests.apply(this, arguments);\n}\n\nexport function submitRequest(_x7, _x8, _x9, _x10) {\n  return _submitRequest.apply(this, arguments);\n}\n\nfunction _submitRequest() {\n  _submitRequest = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(access_token, client, uid, form) {\n    var title, address, description, user_id, lng, lat, params, result;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            title = form.title, address = form.address, description = form.description, user_id = form.user_id;\n            lng = form.geoObject.Point.pos.split(\" \")[0];\n            lat = form.geoObject.Point.pos.split(\" \")[1];\n            _context4.prev = 3;\n            params = {\n              title: title,\n              description: description,\n              address: address,\n              lat: lat,\n              lng: lng,\n              user_id: user_id\n            };\n            _context4.next = 7;\n            return axios.post(\"\".concat(BACKEND_API_URL, \"/requests\"), params, {\n              headers: {\n                \"access-token\": access_token,\n                client: client,\n                uid: uid\n              }\n            });\n\n          case 7:\n            result = _context4.sent;\n            return _context4.abrupt(\"return\", result);\n\n          case 11:\n            _context4.prev = 11;\n            _context4.t0 = _context4[\"catch\"](3);\n            return _context4.abrupt(\"return\", _context4.t0.response);\n\n          case 14:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[3, 11]]);\n  }));\n  return _submitRequest.apply(this, arguments);\n}\n\nexport function getAddress(_x11) {\n  return _getAddress.apply(this, arguments);\n}\n\nfunction _getAddress() {\n  _getAddress = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(city) {\n    var result;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            _context5.next = 3;\n            return axios.get(\"https://geocode-maps.yandex.ru/1.x/?format=json&apikey=\".concat(YANDEX_API, \"&geocode=\").concat(city, \"&lang=en-US\"));\n\n          case 3:\n            result = _context5.sent;\n            console.log('result', result);\n            return _context5.abrupt(\"return\", result);\n\n          case 8:\n            _context5.prev = 8;\n            _context5.t0 = _context5[\"catch\"](0);\n            return _context5.abrupt(\"return\", _context5.t0.response);\n\n          case 11:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[0, 8]]);\n  }));\n  return _getAddress.apply(this, arguments);\n}\n\nexport function sendEmail(_x12, _x13, _x14) {\n  return _sendEmail.apply(this, arguments);\n}\n\nfunction _sendEmail() {\n  _sendEmail = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee6(from, to, message) {\n    var params;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            params = {\n              from_user: from,\n              user_id: to,\n              TextPart: message\n            };\n            return _context6.abrupt(\"return\", axios.post(\"\".concat(BACKEND_API_URL, \"/sendemail\"), params));\n\n          case 2:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _sendEmail.apply(this, arguments);\n}\n\nexport default {\n  submitRegistration: submitRegistration,\n  submitAuthentification: submitAuthentification,\n  fetchRequests: fetchRequests,\n  submitRequest: submitRequest,\n  getAddress: getAddress,\n  sendEmail: sendEmail\n};","map":{"version":3,"sources":["/Users/adotmob/Desktop/volunteers-front/src/api/backendApi.js"],"names":["axios","BACKEND_API_URL","YANDEX_API","submitRegistration","form","email","password","firstName","lastName","params","name","nickname","post","results","localStorage","setItem","headers","data","alert","Error","submitAuthentification","response","fetchRequests","access_token","client","uid","userId","user_id","console","log","get","submitRequest","title","address","description","lng","geoObject","Point","pos","split","lat","result","getAddress","city","sendEmail","from","to","message","from_user","TextPart"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nconst BACKEND_API_URL = \"http://localhost:3000\";\nconst YANDEX_API = \"2e846d9f-4492-4c1d-b01a-fcb4810766c7\";\n\nexport async function submitRegistration(form) {\n  const { email, password, firstName, lastName } = form;\n  try {\n    const params = {\n      email,\n      password,\n      name: lastName,\n      nickname: firstName\n    };\n    const results = await axios.post(`${BACKEND_API_URL}/auth`, params);\n    localStorage.setItem(\n      \"authentication_token\",\n      results.headers[\"access-token\"]\n    );\n    localStorage.setItem(\"email\", email);\n    localStorage.setItem(\"user_id\", results.data.data[\"id\"]);\n    localStorage.setItem(\"client\", results.headers[\"client\"]);\n    return results;\n  } catch (error) {\n    alert(new Error(\"registration failed please change password or email.\"));\n  }\n}\n\nexport async function submitAuthentification(form) {\n  const { email, password } = form;\n  try {\n    const params = {\n      email,\n      password\n    };\n    const results = await axios.post(`${BACKEND_API_URL}/auth/sign_in`, params);\n    localStorage.setItem(\n      \"authentication_token\",\n      results.headers[\"access-token\"]\n    );\n    localStorage.setItem(\"email\", email);\n    localStorage.setItem(\"user_id\", results.data.data[\"id\"]);\n    localStorage.setItem(\"client\", results.headers[\"client\"]);\n    return results;\n  } catch (error) {\n    return error.response;\n  }\n}\n\nexport async function fetchRequests(access_token, client, uid, userId) {\n  try {\n    const params = {\n      user_id: userId\n    }\n    console.log('params', params)\n    const results = await axios.get(`${BACKEND_API_URL}/requests`, {params: {\n      params\n    }},{\n      headers: {\n        \"access-token\": access_token,\n        client: client,\n        uid: uid,\n      }\n    });\n    console.log(results.data)\n    return results.data;\n  } catch (error) {\n    alert(new Error(\"backend API request failed\"));\n  }\n}\n\nexport async function submitRequest(access_token, client, uid, form) {\n  const { title, address, description, user_id } = form;\n  const lng = form.geoObject.Point.pos.split(\" \")[0];\n  const lat = form.geoObject.Point.pos.split(\" \")[1];\n\n  try {\n    const params = {\n      title,\n      description,\n      address,\n      lat,\n      lng,\n      user_id\n    };\n    const result = await axios.post(`${BACKEND_API_URL}/requests`, params, {\n      headers: {\n        \"access-token\": access_token,\n        client: client,\n        uid: uid\n      }\n    });\n    return result;\n  } catch (error) {\n    return error.response;\n  }\n}\n\nexport async function getAddress(city) {\n  try {\n    const result = await axios.get(\n      `https://geocode-maps.yandex.ru/1.x/?format=json&apikey=${YANDEX_API}&geocode=${city}&lang=en-US`\n    );\n    console.log('result', result)\n    return result;\n  } catch (error) {\n    return error.response;\n  }\n}\n\nexport async function sendEmail(from, to, message){\n  const params = {\n    from_user: from,\n    user_id: to,\n    TextPart: message\n  }\n  return axios.post(`${BACKEND_API_URL}/sendemail`, params)\n}\n\nexport default {\n  submitRegistration,\n  submitAuthentification,\n  fetchRequests,\n  submitRequest,\n  getAddress,\n  sendEmail\n};\n"]},"metadata":{},"sourceType":"module"}