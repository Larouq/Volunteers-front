{"ast":null,"code":"var distance = require('turf-distance');\n/**\n * Takes a bounding box and calculates the minimum square bounding box that\n * would contain the input.\n *\n * @name square\n * @param {Array<number>} bbox a bounding box\n * @return {Array<number>} a square surrounding `bbox`\n * @example\n * var bbox = [-20,-20,-15,0];\n *\n * var squared = turf.square(bbox);\n *\n * var features = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     turf.bboxPolygon(bbox),\n *     turf.bboxPolygon(squared)\n *   ]\n * };\n *\n * //=features\n */\n\n\nmodule.exports = function (bbox) {\n  var horizontalDistance = distance(bbox.slice(0, 2), [bbox[2], bbox[1]], 'miles');\n  var verticalDistance = distance(bbox.slice(0, 2), [bbox[0], bbox[3]], 'miles');\n\n  if (horizontalDistance >= verticalDistance) {\n    var verticalMidpoint = (bbox[1] + bbox[3]) / 2;\n    return [bbox[0], verticalMidpoint - (bbox[2] - bbox[0]) / 2, bbox[2], verticalMidpoint + (bbox[2] - bbox[0]) / 2];\n  } else {\n    var horizontalMidpoint = (bbox[0] + bbox[2]) / 2;\n    return [horizontalMidpoint - (bbox[3] - bbox[1]) / 2, bbox[1], horizontalMidpoint + (bbox[3] - bbox[1]) / 2, bbox[3]];\n  }\n};","map":null,"metadata":{},"sourceType":"script"}