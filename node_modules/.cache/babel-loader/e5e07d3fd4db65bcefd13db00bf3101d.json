{"ast":null,"code":"// http://stackoverflow.com/questions/839899/how-do-i-calculate-a-point-on-a-circles-circumference\n// radians = degrees * (pi/180)\n// https://github.com/bjornharrtell/jsts/blob/master/examples/buffer.html\nvar helpers = require('turf-helpers');\n\nvar featureCollection = helpers.featureCollection;\n\nvar jsts = require('jsts');\n\nvar normalize = require('geojson-normalize');\n/**\n * Calculates a buffer for input features for a given radius. Units supported are miles, kilometers, and degrees.\n *\n * @name buffer\n * @param {(Feature|FeatureCollection)} feature input to be buffered\n * @param {number} distance distance to draw the buffer\n * @param {string} unit any of the options supported by turf units\n * @return {FeatureCollection<Polygon>|FeatureCollection<MultiPolygon>|Polygon|MultiPolygon} buffered features\n *\n * @example\n * var pt = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [-90.548630, 14.616599]\n *   }\n * };\n * var unit = 'miles';\n *\n * var buffered = turf.buffer(pt, 500, unit);\n * var result = turf.featurecollection([buffered, pt]);\n *\n * //=result\n */\n\n\nmodule.exports = function (feature, radius, units) {\n  var degrees = helpers.distanceToDegrees(radius, units);\n  var fc = normalize(feature);\n  var buffered = normalize(featureCollection(fc.features.map(function (f) {\n    return bufferOp(f, degrees);\n  })));\n  if (buffered.features.length > 1) return buffered;else if (buffered.features.length === 1) return buffered.features[0];\n};\n\nfunction bufferOp(feature, radius) {\n  var reader = new jsts.io.GeoJSONReader();\n  var geom = reader.read(feature.geometry);\n  var buffered = geom.buffer(radius);\n  var writer = new jsts.io.GeoJSONWriter();\n  buffered = writer.write(buffered);\n  return {\n    type: 'Feature',\n    geometry: buffered,\n    properties: {}\n  };\n}","map":null,"metadata":{},"sourceType":"script"}