{"ast":null,"code":"var getCoord = require('turf-invariant').getCoord;\n\nvar radiansToDistance = require('turf-helpers').radiansToDistance; //http://en.wikipedia.org/wiki/Haversine_formula\n//http://www.movable-type.co.uk/scripts/latlong.html\n\n/**\n * Calculates the distance between two {@link Point|points} in degrees, radians,\n * miles, or kilometers. This uses the\n * [Haversine formula](http://en.wikipedia.org/wiki/Haversine_formula)\n * to account for global curvature.\n *\n * @name distance\n * @param {Feature<Point>} from origin point\n * @param {Feature<Point>} to destination point\n * @param {String} [units=kilometers] can be degrees, radians, miles, or kilometers\n * @return {Number} distance between the two points\n * @example\n * var from = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [-75.343, 39.984]\n *   }\n * };\n * var to = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [-75.534, 39.123]\n *   }\n * };\n * var units = \"miles\";\n *\n * var points = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [from, to]\n * };\n *\n * //=points\n *\n * var distance = turf.distance(from, to, units);\n *\n * //=distance\n */\n\n\nmodule.exports = function (from, to, units) {\n  var degrees2radians = Math.PI / 180;\n  var coordinates1 = getCoord(from);\n  var coordinates2 = getCoord(to);\n  var dLat = degrees2radians * (coordinates2[1] - coordinates1[1]);\n  var dLon = degrees2radians * (coordinates2[0] - coordinates1[0]);\n  var lat1 = degrees2radians * coordinates1[1];\n  var lat2 = degrees2radians * coordinates2[1];\n  var a = Math.pow(Math.sin(dLat / 2), 2) + Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n  return radiansToDistance(2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)), units);\n};","map":null,"metadata":{},"sourceType":"script"}